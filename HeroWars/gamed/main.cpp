/*HeroWars try's to by analoge to the League of Legends server
Copyright (C) 2012  Intline9

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include <stdio.h>
#include <enet/enet.h>
#include <intlib/base64.h>
#include <intlib/blowfish.h>

/* enet_address_set_host (& address, "x.x.x.x"); */
#define SERVER_HOST ENET_HOST_ANY 
#define SERVER_PORT 5109
#define SERVER_KEY "ODlks70+e2SYHI2doO6LKw=="

typedef unsigned char uint8;
typedef unsigned short uint16;
typedef unsigned int uint32;
typedef unsigned long long uint64; 



ENetHost *server;
enum LolPacketId : uint8
{
	PKT_KeyCheck = 0x00,
	PKT_S2C_QueryStatusAns = 0x8e,
	PKT_World_SendGameNumber = 0x99,
	PKT_C2S_QueryStatusReq = 0x17,
	PKT_SynchVersionC2S = 0xc6,
	PKT_C2S_CharSelected = 0xc7,
	PKT_C2S_Exit = 0x95,

	PKT_C2S_Ping_Load_Info = 0x19,
	PKT_S2C_Ping_Load_Info = 0x9E,
	PKT_SpawnStart = 0x67,
	PKT_SpawnName = 0x66,
	PKT_SpawnType = 0x65,
};


typedef struct _ClientInfo
{
	_ClientInfo()
	{
		keyChecked = false;
	}
	bool keyChecked;
	uint64 userId;
} ClientInfo;
#define peerInfo(p) ((ClientInfo*)p->data)

#pragma pack(push, 1) //byte-aligned


typedef struct _PacketHeader
{
	_PacketHeader()
	{
		cmd = type = 0;
		unk1 = 0;
	}
	uint8 cmd;
	uint8 type;
	uint16 unk1;	//?
} PacketHeader;

typedef struct _PingLoadInfo
{
	PacketHeader header;
	uint8 unk0;
	uint32 unk1;
	uint64 userId;
	float loaded;
	float ping;
	uint8 unk4;
	float f3;
}PingLoadInfo;

uint8 *createDynamicPacket(uint8 *str, uint32 size);

typedef struct _SpawnPacket
{
	static _SpawnPacket* create(uint8 cmd, uint8 *str, uint32 size)
	{
		uint32 totalSize = sizeof(_SpawnPacket)+size;
		uint8* buf = new uint8[totalSize];
		memset(buf, 0, totalSize);
		
		_SpawnPacket *type = (_SpawnPacket *)buf;
		type->header.cmd = cmd;
		type->length = size+1;
		memcpy(type->getDescription(), str, type->length);
		return type;
	}

	PacketHeader header;
	uint32 unk1;
	uint64 userId;
	uint32 unk2;
	uint32 length;
	uint8 description;
	uint8 *getDescription()
	{
		return &description;
	}

	uint32 getPacketLength()
	{
		return sizeof(_SpawnPacket)+length-1;
	}
} SpawnPacket;


typedef struct _KeyCheck
{
	_KeyCheck()
	{
		header.cmd = PKT_KeyCheck;
		userId = checkId = 0; //memset(testVar, 0, sizeof(testVar));
		//memset(checkVar, 0, sizeof(checkVar));
		unk1 = 0;
	}

	PacketHeader header;
	uint32 unk1;
	uint64 userId; //uint8 testVar[8];   //User id + padding
	uint64 checkId; //uint8 checkVar[8];  //Encrypted testVar

	uint8 *pCheckId()
	{
		return (uint8*)((uint64*)&checkId);
	}
} KeyCheck;

typedef struct _QueryStatus
{
	_QueryStatus()
	{
		header.cmd = PKT_S2C_QueryStatusAns;
		ok = ENET_HOST_TO_NET_16(1);
	}
	PacketHeader header;
	uint16 ok;
} QueryStatus;

/* TODO*/
typedef struct _SynchVersion
{
	PacketHeader header;
	uint8 ok;
	uint64 unk1;
	uint8 version[27];
	uint32 unk2;
	uint32 unk3;
	
} SynchVersion;
typedef struct _WorldSendGameNumber
{
	_WorldSendGameNumber()
	{
		header.cmd = PKT_World_SendGameNumber;
		memset(data, 0, sizeof(data));
		gameId = 0;
		ok = 0;
	}

	PacketHeader header;
	uint8 ok;
	uint64 gameId;
	uint8 data[0x80];
} WorldSendGameNumber;
#pragma pack(pop)

BlowFish *blowfish;

void printPacket(uint8 *buf, uint32 len)
{
	printf("   ");
	for(uint32 i = 0; i < len; i++)
	{
		printf("%02X ", (uint8)buf[i]);
		if((i+1)%16 == 0)
			printf("\n   ");
	}
	printf("\n");
}

void printLine(uint8 *buf, uint32 len)
{
	for(uint32 i = 0; i < len; i++)
		printf("%02X ", (uint8)buf[i]);
	printf("\n");
}

/*Key check table 

fIUDV63GzaJBP4bm 1: 3F FF 2C B4 10 D7 27 54
fIUDV63GzaJBP4bm 2: 80 BB 48 E3 47 C6 79 D5
*/
void sendPacket(ENetPeer *peer, uint8 channelNo, uint8 *data, uint32 length, uint32 flag = ENET_PACKET_FLAG_RELIABLE)
{
	printf(" Sending packet:\n");
	printPacket(data, length);

	if(length >= 8)
		blowfish->Encrypt(data, length-(length%8)); //Encrypt everything minus the last bytes that overflow the 8 byte boundary

	ENetPacket *packet = enet_packet_create(data, length, flag);
	if(enet_peer_send(peer, channelNo, packet) < 0)
		printf("Warning fail, send!");
}

void broadcastPacket(uint8 *data, uint32 length, uint8 channelNo, uint32 flag = ENET_PACKET_FLAG_RELIABLE)
{
	printf(" Broadcast packet:\n");
	printPacket(data, length);

	if(length >= 8)
		blowfish->Encrypt(data, length-(length%8)); //Encrypt everything minus the last bytes that overflow the 8 byte boundary

	ENetPacket *packet = enet_packet_create(data, length, flag);

	enet_host_broadcast(server, channelNo, packet);
}

bool handleKeyCheck(ENetPeer *peer, ENetPacket *packet)
{
	uint8 test2[8] = {0x74, 0xF1, 0x18, 0x00, 0xF2, 0xB3, 0x67, 0x77};
	uint8 test[8] = {0xed, 0x8c, 0xd2, 0x74, 0xd6, 0x8e, 0xc6, 0xa1};
	uint8 out[8];
	/*
	//Try 1 (IMxTroll)
	C->S
	0000   00 e7 6f 00 00 00 00 00 82 cb 70 01 00 00 00 00  ..o.......p.....
	0010   73 5f d2 c7 c4 26 76 12                          s_...&v.

	S->C
	0000   00 0f eb 97 00 00 00 00 82 cb 70 01 00 00 00 00  ..........p.....
	0010   ed 8c d2 74 d6 8e c6 a1                          ...t....

	//Try 2 (leaving all the same)
	C->S
	0000   00 e7 6f 00 00 00 00 00 82 cb 70 01 00 00 00 00  ..o.......p.....
	0010   78 f5 e8 1c c2 56 a3 fc                          x....V..

	S->C
	0000   00 2a 43 30 00 00 00 00 82 cb 70 01 00 00 00 00  .*C0......p.....
	0010   ed 8c c4 74 7b b6 a3 6f                          ...t{..o

	//Try 3 (colddot)
	C->S
	0000   00 e7 6f 00 00 00 00 00 71 ae 33 01 00 00 00 00  ..o.....q.3.....
	0010   0d 4b f1 4f ba 3d ce 68                          .K.O.=.h

	S->C
	0000   00 e3 8a 4c 00 00 00 00 71 ae 33 01 00 00 00 00  ...L....q.3.....
	0010   ed 8c 31 74 57 6c 85 66                          ..1tWl.f
	*/

	printPacket(packet->data, packet->dataLength);

	KeyCheck *keyCheck = (KeyCheck*)packet->data;

	uint64 userId = blowfish->Decrypt(keyCheck->checkId);

	printf(" Decrypted id: %i\n", userId);
	printf(" User id: %i\n", keyCheck->userId);

	if(userId == keyCheck->userId)
	{
		printf(" User got the same key as i do, go on!\n");
		peerInfo(peer)->keyChecked = true;
		peerInfo(peer)->userId = userId;
	}
	else
	{
		printf(" WRONG KEY, GTFO!!!\n");
		return false;
	}

	keyCheck->checkId = blowfish->Encrypt(userId);
	printf("Encrypt id: ");printLine(keyCheck->pCheckId(), 8);

	printf("Goal: ");printLine(test, 8);
	blowfish->Decrypt(test, out, 8);
	printf("Goal dec: ");printLine(out, 8);
	blowfish->Encrypt(test, out, 8);
	printf("Goal enc: ");printLine(out, 8);

/*
	blowfish->Decrypt(keyCheck->testVar, out, 8);
	printf("Decrypt id: ");printLine(out, 8);

	blowfish->Encrypt(keyCheck->testVar, out, 8);
	printf("Encrypt id: ");printLine(out, 8);

	blowfish->Decrypt(keyCheck->testVar, out, 8);
	blowfish->Decrypt(out, 8);
	printf("Decrypt^2 id: ");printLine(out, 8);

	blowfish->Encrypt(keyCheck->testVar, out, 8);
	blowfish->Encrypt(out, 8);
	printf("Encrypt^2 id: ");printLine(out, 8);*/


	//Send response as this is correct (OFC DO SOME ID CHECKS HERE!!!)
	KeyCheck response;
	response.header.type = 0x39;
	response.header.unk1 = 0xB364;
	response.userId = keyCheck->userId;
	memcpy(response.pCheckId(), test2, 8);
	sendPacket(peer, 0, (uint8*)&response, sizeof(KeyCheck));

	WorldSendGameNumber world;
	world.gameId = 1;
	memcpy(world.data, "IMxTroll", 8);
	sendPacket(peer, 3, (uint8*)&world, sizeof(WorldSendGameNumber));

	return true;
}

bool handleSynch(ENetPeer *peer, ENetPacket *packet)
{
	SynchVersion *version = (SynchVersion*)packet->data;
	printf("Client version: %s\n", version->version);

	//IMxTroll
	//[15924] "8394" "LoLLauncher.exe" "C:/Program Files (x86)/League of Legends/RADS/projects/lol_air_client/releases/0.0.0.134/deploy/LolClient.exe" "95.172.65.74 5115 ODlks70+e2SYHI2doO6LKw== <id_removed>"
	uint8 basicTutorial[] = {0x58, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x82, 0xCB, 0x70, 0x01, 0x00, 0x00, \
		0x00, 0x00, 0x04, 0x00, 0x1C, 0xAF, 0x64, 0x03, 0xA5, 0xB3, 0xC8, 0x05, 0x00, 0x64, 0x00, 0x00, \
		0x00, 0x00, 0x18, 0x00, 0x80, 0x6A, 0x18, 0x00, 0x68, 0x6A, 0x18, 0x00, 0x48, 0x6B, 0x18, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x6C, 0x6A, 0x18, 0x00, 0x1C, 0x6B, 0x18, 0x00, 0xF4, 0x6A, 0x18, 0x00, 0x9D, 0xD4, 0x5F, 0x74, \
		0x52, 0x6B, 0x18, 0x00, 0x58, 0x76, 0x61, 0x03, 0x88, 0x15, 0x0F, 0x03, 0x28, 0x6B, 0x18, 0x00, \
		0x00, 0x00, 0x5E, 0x74, 0x00, 0x00, 0x00, 0x00, 0x95, 0x21, 0x8E, 0x75, 0x71, 0x1B, 0x0D, 0xE0, \
		0x72, 0xE6, 0x0C, 0x40, 0xDC, 0x68, 0xE5, 0x22, 0xAC, 0x6A, 0x18, 0x00, 0x9E, 0x94, 0x5F, 0x74, \
		0xB4, 0x6A, 0x18, 0x00, 0x48, 0x6B, 0x18, 0x00, 0xD4, 0x6A, 0x18, 0x00, 0xD4, 0x6A, 0x18, 0x00, \
		0xD4, 0x6A, 0x18, 0x00, 0x40, 0x6B, 0x18, 0x00, 0x73, 0xB9, 0x62, 0x74, 0xE0, 0x72, 0x66, 0x46, \
		0x2C, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, \
		0xFF, 0x01, 0x00, 0x94, 0x20, 0x4D, 0x06, 0x95, 0x86, 0x5E, 0x06, 0x01, 0x64, 0x00, 0x00, 0x00, \
		0x4E, 0x75, 0x6E, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x4E, 0x75, 0x6E, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, \
		0x01, 0x00, 0x94, 0x20, 0x4D, 0x06, 0x95, 0x86, 0x5E, 0x06, 0x01, 0xC8, 0x00, 0x00, 0x00, 0x4D, \
		0x61, 0x73, 0x74, 0x65, 0x72, 0x59, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4D, \
		0x61, 0x73, 0x74, 0x65, 0x72, 0x59, 0x69, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x97, 0x01, 0x4E, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, \
		0x78, 0x00, 0xB1, 0x00, 0x8D, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x8E, 0x01, \
		0x30, 0x03, 0xF8, 0x02, 0x3C, 0x0C, 0x0F, 0x03, 0x30, 0x00, 0x00, 0x00, 0x30, 0x03, 0xF8, 0x02, \
		0x00, 0x00, 0x00, 0x00, 0xF5, 0xF8, 0x65, 0x77, 0x48, 0xD3, 0xFE, 0x74, 0x54, 0x01, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF5, 0xF8, 0x65, 0x77, \
		0x48, 0xD3, 0xFE, 0x74, 0x54, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0xA8, 0x6C, 0x18, 0x00, 0xA0, 0x61, 0x4D, 0x04, 0x00, 0xFA, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x9A, 0xD3, 0xFE, 0x74, 0x4B, 0x95, 0xE2, 0x22, 0x3C, 0x6D, 0x00, 0x00, \
		0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9D, 0x76, \
		0x00, 0x6D, 0x18, 0x00, 0x90, 0x65, 0x01, 0x75, 0x3B, 0x84, 0xFB, 0x57, 0xFE, 0xFF, 0xFF, 0xFF, \
		0x9A, 0xD3, 0xFE, 0x74, 0xF7, 0x3E, 0x9D, 0x76, 0x54, 0x01, 0x00, 0x00, 0xA0, 0x61, 0x4D, 0x04, \
		0x00, 0xFA, 0x00, 0x00, 0x3C, 0x6D, 0x18, 0x00, 0xFC, 0x3E, 0x9D, 0x76, 0xE6, 0x94, 0xE2, 0x22, \
		0x20, 0x48, 0x67, 0x74, 0xC0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0xFF, 0xFF, \
		0xE4, 0x6C, 0x18, 0x00, 0xB6, 0x51, 0x61, 0x74, 0x88, 0x6D, 0x18, 0x00, 0xE5, 0x40, 0xA7, 0x76, \
		0xF6, 0xC6, 0x67, 0x54, 0xFE, 0xFF, 0xFF, 0xFF, 0xFC, 0x3E, 0x9D, 0x76, 0xB6, 0x51, 0x61, 0x74, \
		0x54, 0x01, 0x00, 0x00, 0xA0, 0x61, 0x4D, 0x04, 0x00, 0xFA, 0x00, 0x00, 0x3C, 0x6D, 0x18, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00, 0x20, 0x48, 0x67, 0x74, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEC, 0x5F, 0x74, \
		0xBC, 0x0C, 0x0F, 0x03, 0x71, 0x56, 0x61, 0x74, 0x0B, 0x00, 0x00, 0x00, 0x68, 0x56, 0x61, 0x74, \
		0xD4, 0x6F, 0xE5, 0x22, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x1C, 0x67, 0x74, 0x98, 0x00, 0x00, 0x00, \
		0x84, 0x6E, 0x18, 0x00, 0xC6, 0x01, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0xA4, 0x6D, 0x18, 0x00, 0x75, 0x04, 0x63, 0x74, 0x9C, 0x6E, 0x18, 0x00, 0x00, 0x62, 0x4D, 0x04, \
		0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xD8, 0x1C, 0x67, 0x74, 0xD8, 0x6D, 0x18, 0x00, \
		0xD4, 0x5B, 0x62, 0x74, 0x9C, 0x6E, 0x18, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x38, 0x62, 0x4D, 0x04, \
		0x18, 0x00, 0x00, 0x00, 0x00, 0xA5, 0x3F, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA5, 0x3F, 0x04, \
		0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x6D, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x6C, 0xE5, 0x22, \
		0x00, 0xA5, 0x3F, 0x04, 0x00, 0xA5, 0x3F, 0x04, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, \
		0xF4, 0x6D, 0x18, 0x00, 0x18, 0x00, 0x00, 0x00, 0xF0, 0xEC, 0x18, 0x00, 0xED, 0x8C, 0x5E, 0x74, \
		0x8C, 0x5F, 0x9B, 0x56, 0xFE, 0xFF, 0xFF, 0xFF, 0x71, 0x5D, 0x62, 0x74, 0xCA, 0x5D, 0x62, 0x74, \
		0x9C, 0x6E, 0x18, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0xE8, 0x95, 0x4C, 0x04, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x95, 0x4C, 0x04, \
		0x01, 0x00, 0x00, 0x00, 0xD8, 0x1C, 0x67, 0x74, 0x01, 0x00, 0x00, 0x00, 0x95, 0x95, 0x5E, 0x00, \
		0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA5, 0x3F, 0x04, 0x18, 0x97, 0x5D, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0xD4, 0xEC, 0x18, 0x00, 0xE8, 0x95, 0x4C, 0x00, 0x00, 0x00, 0x00, 0xFF, \
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0xA5, 0x3F, 0x04, \
		0xC0, 0x54, 0xC6, 0x43, 0x8E, 0x3E, 0xB7, 0x45, 0xEB, 0x73, 0x5E, 0x41, 0x95, 0x9D, 0xB6, 0x45, \
		0x80, 0xD1, 0xBC, 0x42, 0x00, 0x00, 0x00, 0x00, 0x80, 0xD1, 0xBC, 0x42, 0x43, 0x68, 0x61, 0x6F, \
		0x73, 0x53, 0x68, 0x6F, 0x70, 0x30, 0x31, 0x00, 0x72, 0x33, 0x64, 0x32, 0x4D, 0x65, 0x73, 0x68, \
		0x02, 0x00, 0x02, 0x00, 0x54, 0x75, 0x72, 0x72, 0x65, 0x74, 0x00, 0x54, 0x31, 0x5F, 0x43, 0x5F, \
		0x30, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, \
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, \
		0x64, 0x6F, 0x18, 0x00, 0x64, 0xFA, 0x66, 0x77, 0x22, 0xF4, 0x66, 0x77, 0x40, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA4, 0x72, 0x18, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0xBB, 0xA7, 0x67, 0x77, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, \
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, \
		0xF4, 0x6F, 0x18, 0x00, 0xF4, 0x6F, 0x18, 0x00, 0xF4, 0x6F, 0x18, 0x00, 0x02, 0x00, 0x00, 0x00, \
		0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x64, 0xFA, 0x66, 0x77, 0x64, 0xFA, 0x66, 0x77, 0x58, 0x71, 0x18, 0x00, 0xE1, 0xF1, 0x66, 0x77, \
		0x34, 0x70, 0x18, 0x00, 0xE8, 0x71, 0x18, 0x00, 0x00, 0x73, 0x18, 0x00, 0x4C, 0xF2, 0x66, 0x77, \
		0x64, 0x00, 0x6F, 0x00, 0x77, 0x00, 0x73, 0x00, 0x00, 0x00, 0x80, 0x00, 0xB4, 0x70, 0x18, 0x00, \
		0x53, 0x00, 0x78, 0x00, 0x64, 0xFA, 0x66, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, \
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x34, 0x71, 0x18, 0x00, \
		0x34, 0x71, 0x18, 0x00, 0x34, 0x71, 0x18, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, \
		0x64, 0x00, 0x30, 0x00, 0x38, 0x00, 0x63, 0x00, 0x63, 0x00, 0x30, 0x00, 0x08, 0x00, 0x00, 0x00, \
		0xA8, 0xEC, 0xD2, 0x02, 0x00, 0x00, 0xD2, 0x02, 0x00, 0xED, 0xD2, 0x02, 0x66, 0x00, 0x63, 0x00, \
		0x5C, 0x00, 0x4D, 0x00, 0x53, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, \
		0xC4, 0x71, 0x18, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD2, 0x02, 0xA8, 0xEC, 0xD2, 0x02, \
		0xC4, 0x71, 0x18, 0x00, 0x74, 0x3C, 0x67, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, \
		0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xFC, 0x22, 0xD2, 0x02, 0x80, 0x48, 0x74, 0x77, \
		0x38, 0x71, 0x18, 0x00, 0xF9, 0xF9, 0x66, 0x77, 0x70, 0xE4, 0xD2, 0x02, 0xEC, 0x22, 0xD2, 0x02, \
		0x40, 0x3E, 0xFF, 0xFF, 0xF0, 0x71, 0x18, 0x00, 0xA0, 0x01, 0x74, 0x77, 0x00, 0x00, 0x00, 0x00, \
		0xA4, 0x71, 0x18, 0x00, 0x6E, 0xFE, 0x66, 0x77, 0xF0, 0x71, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0xF8, 0x71, 0x18, 0x00, 0x64, 0xFA, 0x00, 0x77, 0x2E, 0x00, 0x00, 0x00, 0x58, 0xE4, 0xD2, 0x02, \
		0x98, 0x71, 0x18, 0x00, 0xD6, 0xFA, 0x66, 0x77, 0x01, 0x00, 0x00, 0x00, 0xAC, 0x73, 0x18, 0x00, \
		0x64, 0xFA, 0x66, 0x77, 0xF0, 0x71, 0x18, 0x00, 0xE0, 0x71, 0x18, 0x00, 0xFC, 0x71, 0x18, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x71, 0x18, 0x00, \
		0xAC, 0x73, 0x18, 0x00, 0x64, 0xFA, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x56, 0x65, \
		0x72, 0x73, 0x69, 0x6F, 0x6E, 0x20, 0x31, 0x2E, 0x30, 0x2E, 0x30, 0x2E, 0x31, 0x33, 0x36, 0x20, \
		0x5B, 0x50, 0x55, 0x42, 0x4C, 0x49, 0x43, 0x5D, 0x00, 0x01, 0x74, 0x77, 0x92, 0xE1, 0x66, 0x77, \
		0x58, 0x00, 0x67, 0x77, 0xC8, 0xFA, 0x6C, 0x51, 0x01, 0x00, 0x00, 0x00, 0xF7, 0xFC, 0x66, 0x77, \
		0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x74, 0x73, 0x18, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x01, 0x00, 0x00, 0x00, 0xA0, 0x01, 0x74, 0x77, 0x18, 0x00, 0x1A, 0x00, 0x58, 0xE4, 0xD2, 0x02, \
		0xC0, 0x22, 0xD2, 0x02, 0xF0, 0x71, 0x18, 0x00, 0x85, 0x48, 0x67, 0x01, 0x00, 0x00, 0x74, 0x77, \
		0x00, 0x00, 0x00, 0x00, 0xB0, 0xEC, 0xD2, 0x02, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x02, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x44, 0x72, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0C, 0x00, 0x00, \
		0x3C, 0x72, 0x01, 0x01, 0xF7, 0x9E, 0xE5, 0x22, 0x2C, 0x76, 0x18, 0x00, 0x50, 0x48, 0x64, 0x00, \
		0x5D, 0x48, 0x64, 0x00, 0x50, 0x72, 0x18, 0x00, 0x54, 0x2C, 0x67, 0x77, 0xCC, 0xEC, 0xD2, 0x02, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x72, 0x18, 0x00, 0xC3, 0x97, 0xFF, 0x74, \
		0xCC, 0xEC, 0xD2, 0x02, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x75, 0x18, 0x00, 0x50, 0x75, 0x18, 0x00, \
		0xD3, 0x9F, 0xFF, 0x74, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xA0, 0xFF, 0x74, 0x18, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0xD8, 0x72, 0x18, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x4C, \
		0x41, 0x53, 0x53, 0x49, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE2, \
		0x5E};

		uint8 summonersWinter[] = {0x58, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x82, 0xCB, 0x70, 0x01, 0x00, 0x00,\
			0x00, 0x00, 0x04, 0x00, 0x1C, 0xAF, 0x64, 0x03, 0xA5, 0xB3, 0xC8, 0x05, 0x00, 0x64, 0x00, 0x00,\
			0x00, 0x00, 0x18, 0x00, 0x50, 0x48, 0x64, 0x00, 0x5D, 0x48, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
			0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0xF5, 0xF8, 0x5F, 0x77, 0xC5, 0xD0, 0x9B, 0x76, 0xAC, 0x02, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x6C, 0x18, 0x00,\
			0x40, 0xD5, 0x45, 0x05, 0x00, 0xFA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xD1, 0x9B, 0x76,\
			0xBE, 0xF4, 0xE7, 0x3F, 0x24, 0x6D, 0x18, 0x00, 0xAC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x17, 0xD1, 0x9B, 0x76, 0x00, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00,\
			0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x75,\
			0xAC, 0x02, 0x00, 0x00, 0x40, 0xD5, 0x45, 0x05, 0x00, 0xFA, 0x00, 0x00, 0x24, 0x6D, 0x18, 0x00,\
			0x2C, 0x3F, 0x34, 0x75, 0x80, 0xF4, 0xE7, 0x3F, 0x20, 0x48, 0x5B, 0x74, 0xC0, 0x02, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x3C, 0x6D, 0x18, 0x00, 0xCC, 0x6C, 0x18, 0x00, 0x68, 0xF5, 0xE7, 0x3F,\
			0x70, 0x6D, 0x18, 0x00, 0x0E, 0x41, 0x3E, 0x75, 0x48, 0xA7, 0xCB, 0x4A, 0xFE, 0x00, 0xFF, 0xFF,\
			0x2C, 0x3F, 0x34, 0x75, 0xB6, 0x51, 0x55, 0x74, 0xAC, 0x02, 0x00, 0x00, 0x40, 0xD5, 0x45, 0x05,\
			0x00, 0xFA, 0x00, 0x00, 0x24, 0x6D, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x02, 0x00, 0x00,\
			0x20, 0x48, 0x5B, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00,\
			0xFE, 0xFF, 0xFF, 0xFF, 0xC0, 0x02, 0x00, 0x00, 0x20, 0x48, 0x5B, 0x74, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0xD8, 0x1C, 0x5B, 0x74, 0x98, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00,\
			0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x6D, 0x18, 0x00, 0x75, 0x04, 0x57, 0x74,\
			0x84, 0x6E, 0x18, 0x00, 0xD8, 0xD5, 0x45, 0x05, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,\
			0xD8, 0x1C, 0x5B, 0x74, 0xC0, 0x6D, 0x18, 0x00, 0xD4, 0x5B, 0x56, 0x74, 0x00, 0x6E, 0x18, 0x00,\
			0xFF, 0xFF, 0xFF, 0xFF, 0xD8, 0xD5, 0x45, 0x05, 0x18, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x2E, 0x05,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x2E, 0x05, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0xC4, 0x6D, 0x18, 0x00, 0xFF, 0x23, 0x52, 0x74, 0x10, 0xFB, 0x32, 0x05, 0x08, 0x6E, 0x18, 0x00,\
			0xA9, 0xE5, 0x52, 0x74, 0x1B, 0x00, 0x00, 0x00, 0xB1, 0x5D, 0x56, 0x74, 0x00, 0x00, 0x00, 0x00,\
			0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,\
			0xD4, 0xEC, 0x18, 0x00, 0xED, 0x8C, 0x52, 0x74, 0x42, 0x14, 0xA6, 0x4B, 0xFE, 0xFF, 0xFF, 0xFF,\
			0x71, 0x5D, 0x56, 0x74, 0xCA, 0x5D, 0x56, 0x74, 0x84, 0x6E, 0x18, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,\
			0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xCB, 0x44, 0x05,\
			0x00, 0x00, 0x00, 0x00, 0x98, 0xCB, 0x44, 0x05, 0x01, 0x00, 0x00, 0x00, 0xD8, 0x1C, 0x5B, 0x74,\
			0x01, 0x00, 0x00, 0x00, 0x95, 0x95, 0x5E, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0xDC, 0x2E, 0x05, 0x18, 0x97, 0x5D, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB8, 0xEC, 0x18, 0x00,\
			0x98, 0xCB, 0x44, 0x05, 0x92, 0x9B, 0x5D, 0x00, 0x00, 0xDC, 0x2E, 0x05, 0xF8, 0xEC, 0x18, 0x00,\
			0x6C, 0x9C, 0x5D, 0x00, 0xD4, 0xEC, 0x18, 0x01, 0x10, 0xBD, 0x44, 0x00, 0x00, 0x00, 0x00, 0xFF,\
			0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x76, 0x2F, 0x8B, 0x43,\
			0x11, 0xFA, 0x37, 0x44, 0xAB, 0x3E, 0xA7, 0x40, 0xE2, 0x18, 0x40, 0x43, 0x21, 0xE0, 0x72, 0x43,\
			0x72, 0x33, 0x64, 0x32, 0x4D, 0x65, 0x73, 0x68, 0x02, 0x00, 0x02, 0x00, 0x6F, 0x72, 0x64, 0x65,\
			0x72, 0x53, 0x68, 0x6F, 0x70, 0x30, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,\
			0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,\
			0x0C, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\
			0x64, 0x6F, 0x18, 0x00, 0x64, 0xFA, 0x60, 0x77, 0x22, 0xF4, 0x60, 0x77, 0x40, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA4, 0x72, 0x18, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0xBB, 0xA7, 0x61, 0x77, 0x38, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,\
			0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,\
			0xF4, 0x6F, 0x18, 0x00, 0xF4, 0x6F, 0x18, 0x00, 0xF4, 0x6F, 0x18, 0x00, 0x02, 0x00, 0x00, 0x00,\
			0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x64, 0xFA, 0x60, 0x77, 0x64, 0xFA, 0x60, 0x77, 0x58, 0x71, 0x18, 0x00, 0xE1, 0xF1, 0x60, 0x77,\
			0x34, 0x70, 0x18, 0x00, 0xE8, 0x71, 0x18, 0x00, 0x00, 0x73, 0x18, 0x00, 0x4C, 0xF2, 0x60, 0x77,\
			0x64, 0x00, 0x6F, 0x00, 0x77, 0x00, 0x73, 0x00, 0x00, 0x00, 0x80, 0x00, 0xB4, 0x70, 0x18, 0x00,\
			0x53, 0x00, 0x78, 0x00, 0x64, 0xFA, 0x60, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,\
			0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x34, 0x71, 0x18, 0x00,\
			0x34, 0x71, 0x18, 0x00, 0x34, 0x71, 0x18, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,\
			0x64, 0x00, 0x30, 0x00, 0x38, 0x00, 0x63, 0x00, 0x63, 0x00, 0x30, 0x00, 0x08, 0x00, 0x00, 0x00,\
			0xC8, 0xEC, 0xBF, 0x02, 0x00, 0x00, 0xBF, 0x02, 0x40, 0xED, 0xBF, 0x02, 0x66, 0x00, 0x63, 0x00,\
			0x5C, 0x00, 0x4D, 0x00, 0x53, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,\
			0xC4, 0x71, 0x18, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0x02, 0xC8, 0xEC, 0xBF, 0x02,\
			0xC4, 0x71, 0x18, 0x00, 0x74, 0x3C, 0x61, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,\
			0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x2C, 0x23, 0xBF, 0x02, 0x80, 0x48, 0x6E, 0x77,\
			0x38, 0x71, 0x18, 0x00, 0xF9, 0xF9, 0x60, 0x77, 0xB8, 0xE4, 0xBF, 0x02, 0x1C, 0x23, 0xBF, 0x02,\
			0x28, 0x3E, 0xFF, 0xFF, 0xF0, 0x71, 0x18, 0x00, 0xA0, 0x01, 0x6E, 0x77, 0x00, 0x00, 0x00, 0x00,\
			0xA4, 0x71, 0x18, 0x00, 0x6E, 0xFE, 0x60, 0x77, 0xF0, 0x71, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0xF8, 0x71, 0x18, 0x00, 0x64, 0xFA, 0x00, 0x77, 0x2E, 0x00, 0x00, 0x00, 0xA0, 0xE4, 0xBF, 0x02,\
			0x98, 0x71, 0x18, 0x00, 0xD6, 0xFA, 0x60, 0x77, 0x01, 0x00, 0x00, 0x00, 0xAC, 0x73, 0x18, 0x00,\
			0x64, 0xFA, 0x60, 0x77, 0xF0, 0x71, 0x18, 0x00, 0xE0, 0x71, 0x18, 0x00, 0xFC, 0x71, 0x18, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x71, 0x18, 0x00,\
			0xAC, 0x73, 0x18, 0x00, 0x64, 0xFA, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x56, 0x65,\
			0x72, 0x73, 0x69, 0x6F, 0x6E, 0x20, 0x31, 0x2E, 0x30, 0x2E, 0x30, 0x2E, 0x31, 0x33, 0x36, 0x20,\
			0x5B, 0x50, 0x55, 0x42, 0x4C, 0x49, 0x43, 0x5D, 0x00, 0x01, 0x6E, 0x77, 0x92, 0xE1, 0x60, 0x77,\
			0x58, 0x00, 0x61, 0x77, 0x06, 0x04, 0xC0, 0x39, 0x01, 0x00, 0x00, 0x00, 0xF7, 0xFC, 0x60, 0x77,\
			0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x74, 0x73, 0x18, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x01, 0x00, 0x00, 0x00, 0xA0, 0x01, 0x6E, 0x77, 0x18, 0x00, 0x1A, 0x00, 0xA0, 0xE4, 0xBF, 0x02,\
			0xF0, 0x22, 0xBF, 0x02, 0xF0, 0x71, 0x18, 0x00, 0x85, 0x48, 0x61, 0x01, 0x00, 0x00, 0x6E, 0x77,\
			0x00, 0x00, 0x00, 0x00, 0xD0, 0xEC, 0xBF, 0x02, 0x00, 0x00, 0x00, 0x00, 0x17, 0x02, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x44, 0x72, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xB8, 0x0C, 0x00, 0x00,\
			0x3C, 0x72, 0x01, 0x01, 0xAE, 0x48, 0xE4, 0x3F, 0x2C, 0x76, 0x18, 0x00, 0x50, 0x48, 0x64, 0x00,\
			0x5D, 0x48, 0x64, 0x00, 0x50, 0x72, 0x18, 0x00, 0x54, 0x2C, 0x61, 0x77, 0xEC, 0xEC, 0xBF, 0x02,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x72, 0x18, 0x00, 0x59, 0x92, 0x9C, 0x76,\
			0xEC, 0xEC, 0xBF, 0x02, 0x00, 0x00, 0x00, 0x00, 0xC4, 0x75, 0x18, 0x00, 0x50, 0x75, 0x18, 0x00,\
			0x69, 0x9A, 0x9C, 0x76, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA4, 0x9A, 0x9C, 0x76, 0x18, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0xD8, 0x72, 0x18, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x4C,\
			0x41, 0x53, 0x53, 0x49, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE2,\
			0xA0};


	sendPacket(peer, 3, (uint8*)summonersWinter, sizeof(summonersWinter));
	return true;
}

bool handleMap(ENetPeer *peer, ENetPacket *packet)
{
	uint8 spawnStart[] = {0x67, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0xed, 0x42, 0x05, 0xd5, \
		0x82, 0xcb, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x0f, 0xeb, 0x97, 0x00, 0x00, 0x00, 0x00, 0x82, 0xcb, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, \
		0xed, 0x8c, 0xd2, 0x74, 0xd6, 0x8e, 0xc6, 0xa1, 0xfe, 0xff, 0xff, 0xff, 0x3c, 0xf1, 0x18, 0x00, \
		0xb2, 0x0c, 0x6a, 0x00, 0xf0, 0xf5, 0x18, 0x00, 0xed, 0x8c, 0xd2, 0x74, 0x46, 0x8e, 0xc6, 0xa1, \
		0xfe, 0xff, 0xff, 0xff, 0x58, 0x4c, 0xd2, 0x74, 0xa0, 0x0c, 0x6a, 0x00, 0x50, 0x81, 0xed, 0x05, \
		0x28, 0x7d, 0x65, 0x03, 0x00, 0xf8, 0x5b, 0x48, 0x00, 0xf8, 0x5b, 0x48, 0x0c, 0x27, 0x37, 0x75, \
		0x18, 0x37, 0x3a, 0x04, 0x00, 0x00, 0x00, 0x00, 0x10, 0x27, 0x00, 0x00, 0x28, 0x7d, 0x65, 0x03, \
		0x9e, 0xbc, 0x5b, 0x00, 0x9c, 0xf7, 0x18, 0x00, 0xdd, 0xbd, 0x5b, 0x00, 0x20, 0x74, 0x6f, 0x20, \
		0x61, 0x1b, 0x00, 0x00, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x20, 0x3a, 0x2c, 0x20, \
		0x30, 0x2c, 0x20, 0x31, 0x00, 0x36, 0x2c, 0x20, 0x74, 0x6f, 0x20, 0x65, 0x6e, 0x65, 0x74, 0x20, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x02, 0xc7, 0xd3, 0x74, 0x50, 0xf2, 0x18, 0x00, 0x08, 0x76, 0x60, 0x03, 0x98, 0x15, 0x3f, 0x00, \
		0x2f, 0x2e, 0xd2, 0x74, 0x00, 0xf2, 0x18, 0x00, 0xb4, 0xf2, 0x18, 0x00, 0x64, 0x1a, 0xd3, 0x74, \
		0x0a, 0x00, 0x00, 0x00, 0x91, 0x1a, 0xd3, 0x74, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x1b, 0xdb, 0x74, \
		0x63, 0x20, 0xd3, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x1a, 0xd3, 0x74, \
		0x00, 0x00, 0x00, 0x00, 0x90, 0xf4, 0x18, 0x00, 0x1c, 0xf5, 0x18, 0x00, 0x2b, 0x00, 0x00, 0x00, \
		0x08, 0x76, 0x60, 0x03, 0x98, 0x15, 0x3f, 0x00, 0xd0, 0x07, 0x3f, 0x00, 0x01, 0x00, 0x00, 0x00, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x05, 0xac, 0x02, \
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x46, 0x00, 0x00, 0x00, 0xf8, 0x1b, 0xdb, 0x74, 0x04, 0xf5, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, \
		0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};



	sendPacket(peer, 6, (uint8*)spawnStart, sizeof(spawnStart));
	return true;
}

bool handleSpawn(ENetPeer *peer, ENetPacket *packet)
{

	const char* name = "IMxTroll";
	const char* type = "Ashe";

	SpawnPacket *spawnName = SpawnPacket::create(PKT_SpawnName, (uint8*)name, strlen(name));
	spawnName->userId = peerInfo(peer)->userId;

	SpawnPacket *spawnType = SpawnPacket::create(PKT_SpawnType, (uint8*)type, strlen(type));
	spawnType->userId = peerInfo(peer)->userId;

	printf("Send 1");
	sendPacket(peer, 3, (uint8*)spawnName, spawnName->getPacketLength());
	
	enet_host_flush(server);
	printf("Send 2");
	sendPacket(peer, 3, (uint8*)spawnType, spawnType->getPacketLength());
	enet_host_flush(server);

	return true;
}

bool handleLoadPing(ENetPeer *peer, ENetPacket *packet)
{
	PingLoadInfo *loadInfo = (PingLoadInfo*)packet->data;

	PingLoadInfo response;
	memcpy(&response, packet->data, sizeof(PingLoadInfo));
	response.header.cmd = PKT_S2C_Ping_Load_Info;
	response.userId = peerInfo(peer)->userId;


	printf("Ping loaded: %f, ping: %f, %i, %f", loadInfo->loaded, loadInfo->ping, loadInfo->unk4, loadInfo->f3);

	//response.loaded = 50.0;
	//response.ping = 10.0;
	//response.unk4 = 66;





	//Should be of course broadcast
	
	//sendPacket(peer, 4, (uint8*)&response, sizeof(PingLoadInfo), ENET_PACKET_FLAG_UNSEQUENCED);
	broadcastPacket((uint8*)&response, sizeof(PingLoadInfo), 4, ENET_PACKET_FLAG_UNSEQUENCED);

	return true;
}

bool handlePacket(ENetPeer *peer, ENetPacket *packet)
{
	if(packet->dataLength >= 8)
	{
		if(peerInfo(peer)->keyChecked)
			blowfish->Decrypt(packet->data, packet->dataLength-(packet->dataLength%8)); //Encrypt everything minus the last bytes that overflow the 8 byte boundary
	}

	PacketHeader *header = (PacketHeader*)packet->data;

	QueryStatus ok;
	switch(header->cmd)
	{
		case PKT_KeyCheck:
			printf("PKT_KeyCheck\n");
			handleKeyCheck(peer, packet);
		break;
		case PKT_C2S_QueryStatusReq:
			printf("PKT_C2S_QueryStatusReq\n");
			sendPacket(peer, 3, (uint8*)&ok, sizeof(QueryStatus));
		break;
		case PKT_SynchVersionC2S:
			printf("PKT_SynchVersionC2S\n");
			handleSynch(peer, packet);
		break;
		case 0x64:
			printf("Handle map");
			handleMap(peer, packet);
		break;
		case PKT_C2S_CharSelected:
			printf("Char selected\n");
			handleSpawn(peer, packet);
		break;
		case PKT_C2S_Ping_Load_Info:
			printf("Load ping\n");
			handleLoadPing(peer, packet);
		break;
		case PKT_C2S_Exit:
			printf("Client exit\n");
		break;
		default:
			printf("Unknown packet: %X\n", header->cmd);
	}
	return true;
}

int main (int argc, char ** argv) 
{
	printf("HeroWars 0.0.0\n");
	if (enet_initialize () != 0)
	{
		printf ("An error occurred while initializing ENet.\n");
		return EXIT_FAILURE;
	}
	atexit (enet_deinitialize);


	ENetAddress address;
	address.host = SERVER_HOST;
	address.port = SERVER_PORT;

	server = enet_host_create(&address, 32, 0, 0);
	if (server == NULL)
	{
		printf ("An error occurred while trying to create an ENet server host.\n");
		exit (EXIT_FAILURE);
	}

	std::string key = base64_decode(SERVER_KEY);
	blowfish = new BlowFish((uint8*)key.c_str(), 16);

	ENetEvent event;

	/* Wait up to 1000 milliseconds for an event. */
	printf("NetLoop\n");
	while(1)
	{
		while (enet_host_service (server, & event, 10) > 0)
		{
			switch (event.type)
			{
			case ENET_EVENT_TYPE_CONNECT:
				uint8 ip[16];
				enet_address_get_host_ip(&event.peer->address, (char*)ip, 16);

				printf ("A new client connected from %s:%u\n", 
					ip,
					event.peer -> address.port);

				/* Store any relevant client information here. */
				event.peer->mtu = 996;
				event.peer->data = new ClientInfo();

				break;

			case ENET_EVENT_TYPE_RECEIVE:
				if(!handlePacket(event.peer, event.packet))
					enet_peer_disconnect(event.peer, 0);

				/* Clean up the packet now that we're done using it. */
				enet_packet_destroy (event.packet);
				break;

			case ENET_EVENT_TYPE_DISCONNECT:
				printf ("Peer disconected.\n");

				/* Reset the peer's client information. */
				delete event.peer->data;
			}
		}
	}
	enet_host_destroy(server);
	system("PAUSE");
}